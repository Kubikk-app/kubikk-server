datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int     @id @default(autoincrement())
  fio         String
  email       String  @unique()
  password    String
  avatar_link String?

  ProjectMember ProjectMember[]
  organizations UsersOnOrganizations[]
}

model UsersOnOrganizations {
  user           User             @relation(fields: [userId], references: [id])
  userId         Int
  organization   Organization     @relation(fields: [organizationId], references: [id])
  organizationId Int
  role           OrganizationRole @relation(fields: [roleId], references: [id])
  roleId         Int

  @@id([userId, organizationId])
}

model ProjectMember {
  id              Int         @id @default(autoincrement())
  user_id         Int
  user            User        @relation(fields: [user_id], references: [id])
  project_id      Int
  project         Project     @relation(fields: [project_id], references: [id])
  project_team_id Int
  project_team    ProjectTeam @relation(fields: [project_team_id], references: [id])
}

model Organization {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @unique
  icon_link            String
  projects             Project[]
  roles                OrganizationRole[]
  UsersOnOrganizations UsersOnOrganizations[]
}

model OrganizationRole {
  id                   Int                    @id @default(autoincrement())
  label                String
  can_manage_members   Boolean                @default(false)
  can_rename_org       Boolean                @default(false)
  can_manage_projects  Boolean                @default(false)
  organization_id      Int
  organization         Organization           @relation(fields: [organization_id], references: [id])
  UsersOnOrganizations UsersOnOrganizations[]
}

model Project {
  id              Int             @id @default(autoincrement())
  name            String
  description     String
  organization_id Int
  organization    Organization    @relation(fields: [organization_id], references: [id])
  members         ProjectMember[]
  teams           ProjectTeam[]
  ProjectRole     ProjectRole[]
}

model ProjectTeam {
  id         Int             @id @default(autoincrement())
  label      String
  members    ProjectMember[]
  project_id Int
  project    Project         @relation(fields: [project_id], references: [id])
}

model ProjectRole {
  id                        Int     @id @default(autoincrement())
  project_id                Int
  project                   Project @relation(fields: [project_id], references: [id])
  label                     String
  can_manage_project        Boolean @default(false)
  can_manage_teams          Boolean @default(false)
  can_manage_members        Boolean @default(false)
  can_interact_with_clients Boolean @default(false)
}

model MessengerIntegration {
  id            Int    @id @default(autoincrement())
  label         String @unique
  project_id    Int
  adapter_label String
  api_key       String
}
